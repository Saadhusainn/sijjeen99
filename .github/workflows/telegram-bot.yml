name: Telegram PDF to GitHub

on:
  repository_dispatch:
    types: [telegram-pdf]

jobs:
  process-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Download PDF with sequential numbering
        run: |
          # Create pdfs directory
          mkdir -p pdfs
          
          # Configure git
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@users.noreply.github.com"
          
          # PULL and get latest state
          git pull --rebase
          
          # Find next available number safely (force base-10 to avoid octal issues)
          MAX_RETRIES=5
          RETRY_COUNT=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            # Get current highest number - FORCE BASE-10
            LAST_NUMBER=$(find pdfs -name "*.pdf" | grep -oE '[0-9]+' | sort -n | tail -1)
            if [ -z "$LAST_NUMBER" ]; then
              NEXT_NUMBER=0
            else
              # Force base-10 arithmetic to avoid octal issues
              NEXT_NUMBER=$((10#$LAST_NUMBER + 1))
            fi
            
            FORMATTED_NUMBER=$(printf "%04d" $NEXT_NUMBER)
            PDF_FILENAME="pdfs/${FORMATTED_NUMBER}.pdf"
            
            echo "Current highest number: $LAST_NUMBER"
            echo "Next file number: $FORMATTED_NUMBER"
            echo "Saving as: $PDF_FILENAME"
            
            # Download PDF
            curl -L --progress-bar "${{ github.event.client_payload.pdf_url }}" -o "$PDF_FILENAME"
            
            if [ -f "$PDF_FILENAME" ]; then
              # Try to commit
              git add .
              git commit -m "Add PDF: ${FORMATTED_NUMBER}.pdf"
              
              if git push; then
                echo "✅ Successfully uploaded as ${FORMATTED_NUMBER}.pdf"
                break
              else
                echo "⚠️ Push failed, retrying..."
                git pull --rebase
                RETRY_COUNT=$((RETRY_COUNT + 1))
                # Remove the failed file
                rm -f "$PDF_FILENAME"
                git reset --hard HEAD^
              fi
            else
              echo "❌ Download failed"
              exit 1
            fi
          done
          
          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "❌ Failed after $MAX_RETRIES attempts"
            exit 1
          fi
